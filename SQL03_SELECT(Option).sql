-- 1.
SELECT STUDENT_NAME "학생 이름", STUDENT_ADDRESS "주소지"
FROM TB_STUDENT
ORDER BY "학생 이름";

-- 2.
SELECT STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
ORDER BY STUDENT_SSN DESC;

-- 3. 
SELECT STUDENT_NAME "학생이름", TO_CHAR(ENTRANCE_DATE, 'RRMMDD') "학번", STUDENT_ADDRESS "거주지 주소"
FROM TB_STUDENT
WHERE STUDENT_ADDRESS LIKE '강원도%' OR STUDENT_ADDRESS LIKE '경기도%'
AND TO_CHAR(ENTRANCE_DATE, 'RR') LIKE '9%'
ORDER BY "학생이름";

-- 4.
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR P
JOIN TB_DEPARTMENT D ON P.DEPARTMENT_NO = D.DEPARTMENT_NO
WHERE D.DEPARTMENT_NAME = '법학과'
ORDER BY PROFESSOR_SSN;

-- 5.✅
SELECT * FROM TB_STUDENT;
SELECT * FROM TB_GRADE;
SELECT * FROM TB_CLASS;

SELECT STUDENT_NO, TO_CHAR(AVG(POINT), '0.00') "POINT"
FROM TB_GRADE
WHERE CLASS_NO = 'C3118100' AND TERM_NO = '200402'
GROUP BY STUDENT_NO
ORDER BY "POINT" DESC, STUDENT_NO;


-- 6. ✅
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
FROM TB_STUDENT S
JOIN TB_DEPARTMENT D ON S.DEPARTMENT_NO = D.DEPARTMENT_NO 
ORDER BY SUBSTR(STUDENT_NAME, 2, 2)

-- 7.
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS C
JOIN TB_DEPARTMENT D ON C.DEPARTMENT_NO = D.DEPARTMENT_NO;

-- 8. ✔ 출력값 순서 다름

SELECT * FROM TB_CLASS_PROFESSOR;
SELECT * FROM TB_PROFESSOR;
SELECT * FROM TB_CLASS;

SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS C
JOIN TB_CLASS_PROFESSOR P ON C.CLASS_NO = P.CLASS_NO
JOIN TB_PROFESSOR P2 ON P.PROFESSOR_NO = P2.PROFESSOR_NO
ORDER BY PROFESSOR_NAME, PROFESSOR_NAME DESC;

-- 9. ✔ 출력값 순서 다름
SELECT * FROM TB_DEPARTMENT;


SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS C
JOIN TB_CLASS_PROFESSOR P ON C.CLASS_NO = P.CLASS_NO
JOIN TB_PROFESSOR P2 ON P.PROFESSOR_NO = P2.PROFESSOR_NO
JOIN TB_DEPARTMENT D ON C.DEPARTMENT_NO = D.DEPARTMENT_NO 
WHERE CATEGORY = '인문사회';

-- 10. 
SELECT * FROM TB_STUDENT;
SELECT * FROM TB_GRADE;
SELECT * FROM TB_DEPARTMENT;

SELECT S.STUDENT_NO "학번", S.STUDENT_NAME "학생 이름", ROUND(AVG(POINT), 1) "전체 평점"
FROM TB_STUDENT S
JOIN TB_GRADE G ON S.STUDENT_NO = G.STUDENT_NO
JOIN TB_DEPARTMENT D ON S.DEPARTMENT_NO = D.DEPARTMENT_NO 
WHERE D.DEPARTMENT_NAME = '음악학과'
GROUP BY S.STUDENT_NO, S.STUDENT_NAME
ORDER BY "학번";

-- 11.
SELECT * FROM TB_CLASS;
SELECT * FROM TB_DEPARTMENT;
SELECT * FROM TB_STUDENT;
SELECT * FROM TB_PROFESSOR;

SELECT DEPARTMENT_NAME "학과이름", STUDENT_NAME "학생이름", PROFESSOR_NAME "지도교수이름"
FROM TB_STUDENT S 
JOIN TB_DEPARTMENT D ON S.DEPARTMENT_NO = D.DEPARTMENT_NO
JOIN TB_PROFESSOR P ON S.COACH_PROFESSOR_NO = P.PROFESSOR_NO
WHERE S.STUDENT_NO = 'A313047';

-- 12.
SELECT * FROM TB_CLASS;
SELECT * FROM TB_GRADE;

SELECT STUDENT_NAME, TERM_NO
FROM TB_STUDENT S
JOIN TB_GRADE G ON S.STUDENT_NO = G.STUDENT_NO
JOIN TB_CLASS C ON G.CLASS_NO = C.CLASS_NO
WHERE G.TERM_NO LIKE '2007%' AND C.CLASS_NAME = '인간관계론';

-- 13. ✅

SELECT * FROM TB_DEPARTMENT;
SELECT * FROM TB_STUDENT WHERE COACH_PROFESSOR_NO IS NULL;
SELECT * FROM TB_PROFESSOR;
SELECT * FROM TB_CLASS_PROFESSOR;
SELECT * FROM TB_CLASS;


SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS C
JOIN TB_DEPARTMENT D ON C.DEPARTMENT_NO = D.DEPARTMENT_NO
WHERE D.CATEGORY = '예체능'
	AND C.CLASS_NO NOT IN ( 
		SELECT CLASS_NO
		FROM TB_CLASS_PROFESSOR
	)
	

-- 14.
SELECT * FROM TB_DEPARTMENT;

SELECT STUDENT_NAME "학생이름", NVL(P.PROFESSOR_NAME, '지도교수 미지정') "지도교수"
FROM TB_STUDENT S
LEFT JOIN TB_PROFESSOR P ON S.COACH_PROFESSOR_NO = P.PROFESSOR_NO
JOIN TB_DEPARTMENT D ON S.DEPARTMENT_NO = D.DEPARTMENT_NO
WHERE D.DEPARTMENT_NAME = (
	SELECT DEPARTMENT_NAME
	FROM TB_DEPARTMENT
	WHERE DEPARTMENT_NAME = '서반아어학과'
)
ORDER BY S.STUDENT_NO ;

-- 15. ✔ 값은 맞지만 출력 정렬이 다름
SELECT * FROM TB_DEPARTMENT;
SELECT * FROM TB_STUDENT;

WITH STUDENT_SCORE_INFO AS (
	SELECT STUDENT_NO "학번", AVG(POINT) "평점"
	FROM TB_GRADE
	GROUP BY STUDENT_NO
	HAVING AVG(POINT) >= 4.0
)
SELECT STUDENT_NO 학번, STUDENT_NAME 이름, DEPARTMENT_NAME "학과 이름", I.평점 평점
FROM STUDENT_SCORE_INFO I
JOIN TB_STUDENT S ON I.학번 = S.STUDENT_NO
JOIN TB_DEPARTMENT D ON S.DEPARTMENT_NO = D.DEPARTMENT_NO
WHERE S.ABSENCE_YN = 'N';

--16.
SELECT * FROM TB_DEPARTMENT;
SELECT * FROM TB_GRADE;
SELECT * FROM TB_CLASS;
SELECT 
FROM TB_DEPARTMENT D

SELECT C.CLASS_NO, C.CLASS_NAME, AVG(POINT)
FROM TB_CLASS C 
JOIN TB_GRADE G ON C.CLASS_NO = G.CLASS_NO
WHERE C.CLASS_TYPE LIKE '전공%'
GROUP BY C.CLASS_NO, C.CLASS_NAME
HAVING C.CLASS_NO  IN (
	SELECT C.CLASS_NO 
	FROM TB_DEPARTMENT D
	JOIN TB_CLASS C ON D.DEPARTMENT_NO = C.DEPARTMENT_NO
	WHERE DEPARTMENT_NAME = '환경조경학과' 
) ORDER BY C.CLASS_NO;

-- 17. 
SELECT DEPARTMENT_NO
FROM TB_STUDENT
WHERE STUDENT_NAME = '최경희';

SELECT STUDENT_NAME, STUDENT_ADDRESS
FROM TB_STUDENT
WHERE DEPARTMENT_NO IN (
	SELECT DEPARTMENT_NO
	FROM TB_STUDENT
	WHERE STUDENT_NAME = '최경희'
);

-- 18. ✅
SELECT * FROM TB_DEPARTMENT;
SELECT * FROM TB_GRADE;
SELECT * FROM TB_STUDENT;
SELECT * FROM TB_CLASS;

SELECT STUDENT_NO, STUDENT_NAME
FROM (
	SELECT S.STUDENT_NO, S.STUDENT_NAME, AVG(G.POINT) AS 평점
	FROM TB_STUDENT S
	JOIN TB_DEPARTMENT D ON S.DEPARTMENT_NO = D.DEPARTMENT_NO
	JOIN TB_GRADE G ON S.STUDENT_NO = G.STUDENT_NO
	WHERE D.DEPARTMENT_NAME = '국어국문학과'
	GROUP BY S.STUDENT_NO, S.STUDENT_NAME
	ORDER BY 평점 DESC
)
WHERE ROWNUM = 1;

-- 19. ✅

SELECT * FROM TB_GRADE;
SELECT * FROM TB_STUDENT;
SELECT * FROM TB_CLASS;
SELECT * FROM TB_DEPARTMENT;

SELECT * FROM TB_GRADE;

-- 카테고리와 같은 학과 정보들
SELECT D.DEPARTMENT_NAME 
	FROM TB_DEPARTMENT D
	WHERE CATEGORY IN (
		SELECT CATEGORY
		FROM TB_DEPARTMENT
		WHERE DEPARTMENT_NAME = '환경조경학과'
	);

-- 학과별 평점 -> 이름만 바꾸면 됌
SELECT ROUND(AVG(평점))
FROM (
	SELECT STUDENT_NO, AVG(G.POINT) 평점
	FROM TB_GRADE G
	WHERE STUDENT_NO IN (
		SELECT STUDENT_NO
		FROM TB_STUDENT S
		WHERE S.DEPARTMENT_NO IN (
				SELECT DEPARTMENT_NO 
				FROM TB_DEPARTMENT
				WHERE TB_DEPARTMENT.DEPARTMENT_NAME = '물리학과'
		)
	)
	GROUP BY STUDENT_NO
);

WITH STUDENT_AVG_INFO AS (
	SELECT S.STUDENT_NO, S.DEPARTMENT_NO, AVG(POINT) "학생들 평균"
	FROM TB_STUDENT S
	JOIN TB_GRADE G ON S.STUDENT_NO = G.STUDENT_NO
	GROUP BY S.STUDENT_NO, S.DEPARTMENT_NO
)
SELECT D.DEPARTMENT_NAME, ROUND(AVG(S."학생들 평균"), 1)
FROM STUDENT_AVG_INFO S
JOIN TB_DEPARTMENT D ON S.DEPARTMENT_NO = D.DEPARTMENT_NO
WHERE D.CATEGORY IN (
	SELECT CATEGORY
	FROM TB_DEPARTMENT
	WHERE DEPARTMENT_NAME = '환경조경학과'
)
GROUP BY D.DEPARTMENT_NAME
ORDER BY D.DEPARTMENT_NAME;
