DELETE FROM CATEGORIES;
DELETE FROM PRODUCTS;
DELETE FROM CUSTOMERS;
DELETE FROM ORDERS;

DROP TABLE CATEGORIES;
DROP TABLE PRODUCTS;
DROP TABLE CUSTOMERS;
DROP TABLE ORDERS;
DROP TABLE ORDER_DETAILS;

-- 1. 카테고리 테이블
CREATE TABLE CATEGORIES(
	CATEGORY_ID NUMBER PRIMARY KEY,
	CATEGORY_NAME VARCHAR2(100) UNIQUE
);

COMMENT ON COLUMN CATEGORIES.CATEGORY_ID IS '카테고리 ID';
COMMENT ON COLUMN CATEGORIES.CATEGORY_NAME IS '카테고리 이름';

SELECT * FROM CATEGORIES;

-- 2. 상품 정보 테이블
CREATE TABLE PRODUCTS(
	PRODUCT_ID NUMBER PRIMARY KEY,
	PRODUCT_NAME VARCHAR2(100) NOT NULL,
	CATEGORY NUMBER REFERENCES CATEGORIES(CATEGORY_ID),
	-- CATEGORY NUMBER CONSTRAINT 제약조건명 REFERENCES CATEGORIES(CATEGORY_ID)
	PRICE NUMBER DEFAULT 0,
	STOCK_QUANTITY NUMBER DEFAULT 0
);
COMMENT ON COLUMN PRODUCTS.PRODUCT_ID IS '상품 코드';
COMMENT ON COLUMN PRODUCTS.PRODUCT_NAME IS '상품 이름';
COMMENT ON COLUMN PRODUCTS.CATEGORY IS '카테고리';
COMMENT ON COLUMN PRODUCTS.PRICE IS '가격';
COMMENT ON COLUMN PRODUCTS.STOCK_QUANTITY IS '재고량';

-- 3. 고객 정보 테이블
CREATE TABLE CUSTOMERS(
	CUSTOMER_ID NUMBER PRIMARY KEY,
	NAME VARCHAR2(20) NOT NULL,
	GENDER CHAR(3) CHECK(GENDER IN ('남', '여')),
	ADDRESS VARCHAR2(100),
	PHONE VARCHAR2(30)
);

COMMENT ON COLUMN CUSTOMERS.CUSTOMER_ID IS '고객 ID';
COMMENT ON COLUMN CUSTOMERS.NAME IS '이름';
COMMENT ON COLUMN CUSTOMERS.GENDER IS '성별';
COMMENT ON COLUMN CUSTOMERS.ADDRESS IS '주소';
COMMENT ON COLUMN CUSTOMERS.PHONE IS '전화번호';

-- 4. 주문 정보 테이블
CREATE TABLE ORDERS(
	ORDER_ID NUMBER PRIMARY KEY,
	ORDER_DATE DATE DEFAULT SYSDATE,
	STATUS CHAR(1) DEFAULT 'N' CHECK(STATUS IN('Y', 'N')),
	CUSTOMER_ID NUMBER REFERENCES CUSTOMERS(CUSTOMER_ID) ON DELETE CASCADE
);

DROP TABLE ORDERS;
DELETE FROM ORDERS;

COMMENT ON COLUMN ORDERS.ORDER_ID IS '주문 번호';
COMMENT ON COLUMN ORDERS.ORDER_DATE IS '주문일';
COMMENT ON COLUMN ORDERS.STATUS IS '처리상태';
COMMENT ON COLUMN ORDERS.CUSTOMER_ID IS '고객 ID';


-- 5. 주문 상세 정보 테이블 
CREATE TABLE ORDER_DETAILS(
	ORDER_DETAIL_ID NUMBER PRIMARY KEY,
	ORDER_ID NUMBER REFERENCES ORDERS(ORDER_ID) ON DELETE CASCADE,
	PRODUCT_ID NUMBER REFERENCES PRODUCTS(PRODUCT_ID) ON DELETE SET NULL,
	QUANTITY NUMBER,
	PRICE_PER_UNIT NUMBER
);

COMMENT ON COLUMN ORDER_DETAILS.ORDER_DETAIL_ID IS '주문 상세';
COMMENT ON COLUMN ORDER_DETAILS.ORDER_ID IS '주문 번호';
COMMENT ON COLUMN ORDER_DETAILS.PRODUCT_ID IS '상품 코드';
COMMENT ON COLUMN ORDER_DETAILS.QUANTITY IS '수량';
COMMENT ON COLUMN ORDER_DETAILS.PRICE_PER_UNIT IS '가격';


INSERT INTO CATEGORIES VALUES(1, '스마트폰');
INSERT INTO CATEGORIES VALUES(2, 'TV');
INSERT INTO CATEGORIES VALUES(3, 'Gaming');

SELECT * FROM CATEGORIES;

INSERT INTO PRODUCTS VALUES(101, 'Apple iPhone 12', 1, 1500000, 30);
INSERT INTO PRODUCTS VALUES(102, 'Samsung Galaxy S24', 1, 1800000, 50);
INSERT INTO PRODUCTS VALUES(201, 'LG OLED TV', 2, 3600000, 10);
INSERT INTO PRODUCTS VALUES(301, 'Sony PlayStation 5', 3, 700000, 15);

SELECT * FROM PRODUCTS;

INSERT INTO CUSTOMERS VALUES(1, '홍길동', '남', '서울시 성동구 왕십리', '010-1111-2222');
INSERT INTO CUSTOMERS VALUES(2, '유관순', '여', '서울시 종로구 안국동', '010-3333-2222');

SELECT * FROM CUSTOMERS;

INSERT INTO ORDERS VALUES(576, '2024-02-29', 'N', 1);
INSERT INTO ORDERS VALUES(978, '2024-03-11', 'Y', 2);
INSERT INTO ORDERS VALUES(777, '2024-03-11', 'N', 2);
INSERT INTO ORDERS VALUES(134, '2022-12-25', 'Y', 1);
INSERT INTO ORDERS VALUES(499, '2020-01-23', 'Y', 1);

SELECT * FROM ORDERS;

INSERT INTO ORDER_DETAILS VALUES(111, 576, 101, 1, 1500000);
INSERT INTO ORDER_DETAILS VALUES(222, 978, 201, 2, 3600000);
INSERT INTO ORDER_DETAILS VALUES(333, 978, 101, 1, 1800000);
INSERT INTO ORDER_DETAILS VALUES(444, 777, 301, 5, 700000);
INSERT INTO ORDER_DETAILS VALUES(555, 134, 102, 1, 1800000);
INSERT INTO ORDER_DETAILS VALUES(666, 499, 201, 3, 3600000);

-- 1번 조회
SELECT C.NAME 고객명, O.ORDER_DATE 주문일, O.STATUS 처리상태
FROM CUSTOMERS C
JOIN ORDERS O ON C.CUSTOMER_ID = O.CUSTOMER_ID
WHERE O.STATUS = 'N';

-- 2번 조회
SELECT O.ORDER_ID 주문번호, O.ORDER_DATE 주문날짜, O.STATUS 처리상태
FROM CUSTOMERS C
JOIN ORDERS O ON C.CUSTOMER_ID = O.CUSTOMER_ID
WHERE C.NAME = '홍길동' AND EXTRACT(YEAR FROM ORDER_DATE) = 2024

-- 3번 조회
-- 주문번호, 상품명, 수량, 개별금액, 주문별금액합계

SELECT O1.ORDER_ID 주문번호, P.PRODUCT_NAME 상품명, O2.QUANTITY 수량, 
P.PRICE 개별금액, O2.QUANTITY * P.PRICE 주문별금액합계
FROM CUSTOMERS C 
JOIN ORDERS O1 ON C.CUSTOMER_ID = O1.CUSTOMER_ID
JOIN ORDER_DETAILS O2 ON O1.ORDER_ID = O2.ORDER_ID
JOIN PRODUCTS P ON P.PRODUCT_ID = O2.PRODUCT_ID
WHERE (O1.ORDER_ID) IN (
	SELECT O.ORDER_ID
	FROM CUSTOMERS C
	JOIN ORDERS O ON C.CUSTOMER_ID = O.CUSTOMER_ID
) AND C.NAME = '유관순'
ORDER BY 주문번호, O2.QUANTITY DESC;


SELECT * FROM CATEGORIES;
SELECT * FROM PRODUCTS;
SELECT * FROM CUSTOMERS;
SELECT * FROM ORDERS;
SELECT * FROM ORDER_DETAILS;


